# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="0xcMCBora:?WH@JI@xClEZu4Z;PQT3q7uRyQ6U<1n6M_Qr_IbeL;T0Jn<=6^xB0/"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=ly.gravit.web.Global

application.mode=dev

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

parsers.text.maxLength=1024K

# play2-auth
auth.cookie.secure=false

gravitly.admin.email="admin@gravit.ly"
gravitly.ws.timeout=20

#play-parseapi
parseapi.app.id=bSm5oGK8VnmtD8hBtkhDyPV9qhE2gU87uCGQH4vd
parseapi.restapi.key=feicksdNx99OM7xaqnPq6ETyl8K40sqMJeoeKMqh

#aws
aws.accessKeyId=AKIAJMBAUVKABMYA7MHA
aws.secretKey=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

s3.uploads.bucket=gravitly.uploads.dev
image.server.url="https://s3.amazonaws.com"

#assets
assets.base.url="/assets"

meta.api.snowCountry.url="http://feeds.snocountry.com/getResortList.php"
meta.api.snowCountry.key=SnoCountry.example

meta.api.wwo.url="http://api.worldweatheronline.com/free/v1"
meta.api.wwo.key=929dfhdsxwym4yn2gcjn56uh
meta.api.wwo.dataset="cloudcover,humidity,moonrise,moonset,precipMM,pressure,pressureInches,sunrise,sunset,swellDir,swellHeight_m,swellPeriod_secs,visibility,visibilityMiles,weatherCode,weatherDesc,winddir16Point,winddirDegree,windspeedKmph,windspeedKnots,windspeedMeterSec,windspeedMiles"
meta.api.wwo.marine.dataset="cloudcover,humidity,precipMM,pressure,sigHeight_m,swellDir,swellHeight_m,swellPeriod_secs,visibility,waterTemp_C,waterTemp_F,weatherCode,winddir16Point,winddirDegree,windspeedKmph,windspeedMiles"

meta.api.goglplaces.url="https://maps.googleapis.com/maps/api/place/details/json"
meta.api.goglplaces.key=AIzaSyBoLmFUrh93yhHgj66fXsmYBENARWlBUf0
